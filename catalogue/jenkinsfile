pipeline {
    agent {
        label "agent_1"
    }
    environment { 
        appVersion = ''
        REGION = "us-east-1"
        ACC_ID = "338556495561"
        PROJECT = "roboshop"
        COMPONENT = "catalogue"
    }
    options {
        timeout(time:30, unit: 'MINUTES')
        disableConcurrentBuilds()
    }
    stages {
        stage('build') {
            steps {
                script {
                    sh """
                        echo "Hello Build"
                        sleep 10
                    """
                }
                
            }
        }
        
        stage('Read JSON') {
            steps {
                script {
                    
                    // Read the JSON file
                    def config = readJSON file: 'catalogue/package.json'

                    // Access data from the parsed JSON object
                    echo "Project Name: ${config.name}"
                    appVersion = config.version
                    echo "Project description: ${config.description}"
                }
            }
        }
        stage('npm install') {
            steps {
                script {

                    sh """
                        npm install catalogue/
                    """
                }
            }
        }
        stage('Docker Build') {
            steps {
                script {
                    withAWS(credentials: 'aws-creds', region: 'us-east-1') {
                        dir('catalogue'){
                            sh """
                                aws ecr get-login-password --region ${REGION} | docker login --username AWS --password-stdin ${ACC_ID}.dkr.ecr.us-east-1.amazonaws.com
                                docker build -t ${ACC_ID}.dkr.ecr.us-east-1.amazonaws.com/${PROJECT}/${COMPONENT}:${appVersion} .
                                docker push ${ACC_ID}.dkr.ecr.us-east-1.amazonaws.com/${PROJECT}/${COMPONENT}:${appVersion}
                            """
                        }
                    }
                }
            }
        }
    }
}